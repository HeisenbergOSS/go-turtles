# This type represents a single piece of information (a "turtle").
# It includes the core data and its relationships to other facts.
type Fact {
  id: ID!
  title: String!
  content: String!
  sourceURL: String

  # The parent fact (the "turtle" this one sits on). Can be null for top-level facts.
  parent: Fact

  # The child facts that are supported by this one.
  children: [Fact!]!

  createdAt: String!
  updatedAt: String!
}

# Input type for creating a new fact.
# 'parentID' is optional for creating top-level facts.
input CreateFactInput {
  title: String!
  content: String!
  sourceURL: String
  parentID: ID
}

# Input type for updating an existing fact. All fields are optional.
input UpdateFactInput {
  title: String
  content: String
  sourceURL: String
  parentID: ID
}

# The root of all data-changing operations.
type Mutation {
  createFact(input: CreateFactInput!): Fact!
  updateFact(id: ID!, input: UpdateFactInput!): Fact!
  deleteFact(id: ID!): Fact!
}

# The root of all queries.
type Query {
  # Fetches a single fact by its unique ID.
  fact(id: ID!): Fact

  # Fetches all top-level facts (those with no parent). This is the main entrypoint for the app.
  topLevelFacts: [Fact!]!
  search(term: String!): [Fact!]!
}
